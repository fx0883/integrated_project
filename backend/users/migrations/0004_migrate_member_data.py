# Generated by Django 5.2 on 2025-06-15 08:22

from django.db import migrations


def migrate_members_to_new_model(apps, schema_editor):
    """
    将原有User表中的普通成员数据迁移到新的Member表
    """
    # 获取模型类
    User = apps.get_model('users', 'User')
    Member = apps.get_model('users', 'Member')
    
    # 记录父子关系，用于后续处理
    parent_map = {}
    
    # 迁移普通成员到Member表
    for user in User.objects.filter(is_admin=False):
        # 创建新的Member记录
        member = Member.objects.create(
            id=user.id,
            username=user.username,
            password=user.password,
            email=user.email,
            phone=user.phone,
            nick_name=user.nick_name,
            avatar=user.avatar,
            first_name=user.first_name,
            last_name=user.last_name,
            is_active=user.is_active,
            is_superuser=user.is_superuser,
            is_deleted=user.is_deleted,
            status=user.status,
            tenant=user.tenant,
            last_login=user.last_login,
            last_login_ip=user.last_login_ip,
            date_joined=user.date_joined
        )
        
        # 记录父子关系
        if user.parent_id:
            parent_map[member.id] = user.parent_id
    
    # 更新父子关系
    for member_id, parent_id in parent_map.items():
        try:
            member = Member.objects.get(id=member_id)
            parent = Member.objects.get(id=parent_id)
            member.parent = parent
            member.save(update_fields=['parent'])
        except Member.DoesNotExist:
            print(f"警告：成员ID {member_id} 或父账号ID {parent_id} 不存在")


def reverse_migrate(apps, schema_editor):
    """
    回滚迁移，删除Member表中的数据
    """
    Member = apps.get_model('users', 'Member')
    Member.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_create_member_model'),
    ]

    operations = [
        migrations.RunPython(migrate_members_to_new_model, reverse_migrate),
    ]
